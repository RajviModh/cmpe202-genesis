Abstract Factory Pattern
https://www.tutorialspoint.com/design_pattern/abstract_factory_pattern.htm

Filter Pattern
https://www.tutorialspoint.com/design_pattern/filter_pattern.htm

Facade Pattern
https://www.tutorialspoint.com/design_pattern/facade_pattern.htm

How to create Random behavior in Greenfoot scenarions based on random numbers :

Greenfoot has a built-in class called 'Greenfoot' that is part of the framework. This class has a method called getRandomNumber. 
Its signature is :
  + public int getRandomNumber(int limit)
  
In our own code, whenever we need a random number, we can call this method:
  + int myNumber = Greenfoot.getRandomNumber(10);
  
This example will give us a number in the range [0..9]. That is: the number is always between zero (inclusive) and the limit you specify (exclusive). 
For details, see the description of the Greenfoot class in the Greenfoot API.
Once you have random numbers, using these for random behaviour is only a smallstep. 

For example:
    if(Greenfoot.getRandomNumber(2) == 0) {   // 50% chance
        turnLeft();
    }
    else {
        turnRight();
    }
    
+To make object move on screen, it is enough to modify the object's location. 
Three attributes of each actor become automatically and immediately visible on screen when you change them. They are:
•	the location (given as x and y coordinates) 
•	the rotation
•	the image
If we change any of these attributes, the appearance of the actor on screen will change. The Actor class has methods to get and set any of these. 
 
+The first thing to look at is location changes. Consider, for example, the following code:
    public void act()
    {
        int x = getX();
        int y = getY();
        setLocation(x + 1, y);
    } 
The effect of this code fragment is to move the actor one cell to the right. It does this by getting the actor's current x and y coordinates, and then 
setting a new location for the actor with the x-coordinate increased by one. We can write the same code a little shorter as 
    public void act()
    {
        setLocation(getX() + 1, getY());

